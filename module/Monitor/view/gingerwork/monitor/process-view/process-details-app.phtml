<div class="row">
    <div id="app" class="col-md-12">
        <h1 class="text-center"><?php echo $this->translate('Process Monitor') ?></h1>
        <script type="text/x-handlebars" data-template-name="app">
            {{outlet}}
        </script>
    </div>
</div>

<?php

echo $this->partial('gingerwork/monitor/process-view/partial/process-details');

//Bootstrap ember app
$this->inlineScript()->captureStart();

$apiUrl = ltrim($this->url('monitor/api'), '/');

$availableGingerTypes = json_encode($this->available_ginger_types);
$availableTaskTypes = json_encode($this->available_task_types);
$availableManipulationScripts = json_encode($this->available_manipulation_scripts);
$connectors = json_encode($this->connectors);
$locations  = json_encode($this->locations);
$shortLocale = explode("_", $this->plugin('translate')->getTranslator()->getLocale())[0];
$clientTranslations = json_encode([
    'process' => [
        'linear' => [
            'value' => \Ginger\Processor\Definition::PROCESS_LINEAR_MESSAGING,
            'label' => $this->translate('Linear Process'),
        ],
        'foreach' => [
            'value' => \Ginger\Processor\Definition::PROCESS_PARALLEL_FOR_EACH,
            'label' => $this->translate('Foreach Process'),
        ]
    ],
    'message' => [
        'collect_data' => [
            'value' => 'collect-data',
            'label' => $this->translate('Collect Data Message'),
        ],
        'data_collected' => [
            'value' => 'data-collected',
            'label' => $this->translate('Data Collected Message'),
        ],
        'process_data' => [
            'value' => 'process-data',
            'label' => $this->translate('Process Data Message'),
        ]
    ],
    'task' => [
        'task' => $this->translate('Task'),
        'new' => $this->translate('New Task'),
        'collect_data' => [
            'value' => \Ginger\Processor\Definition::TASK_COLLECT_DATA,
            'label' => $this->translate('Collect Data'),
        ],
        'process_data' => [
            'value' => \Ginger\Processor\Definition::TASK_PROCESS_DATA,
            'label' => $this->translate('Process Data'),
        ],
        'manipulate_payload' => [
            'value' => \Ginger\Processor\Definition::TASK_MANIPULATE_PAYLOAD,
            'label' => $this->translate('Run Manipulation Script'),
        ]
    ],
    'event' => [
        'started_event' => $this->translate('Task was started'),
        'done_event' => $this->translate('Task successfully done'),
        'failed_event' => $this->translate('Task failed'),
        'unknown' => $this->translate('Unknown event logged: '),
        'log_message' => [
            'system_error' => $this->translate('A system error occurred!'),
            'unknown' => $this->translate('Unknown log message received with msg code: '),
        ]
    ],
    'metadata_not_available' => $this->translate('Metadata configuration is not available for the selected connector')
]);

echo <<<JS
window.App = Ember.Application.create({
    rootElement : '#app'
});

window.PM = App;

DS.RESTAdapter.reopen({
  namespace : '{$apiUrl}'
});

Em.I18n.locale = '{$shortLocale}';

Em.I18n.translations = $clientTranslations;

App.TaskTypes          = $availableTaskTypes;
App.ManipulationScrits = $availableManipulationScripts;
App.GingerTypes        = $availableGingerTypes;
App.Connectors         = $connectors;
App.Locations          = $locations;

App.Object = Ember.Object.extend(Em.Serializable);

//Route Config
App.Router.map(function() {
    this.resource('process', { path: '/' }, function () {});
});

App.ApplicationRoute = Ember.Route.extend({
    model : function() {
        {$this->emberPushToStore('process', [$this->process])}

        return this.store.find("process", "{$this->process['id']}");
    }
});

JS;
$this->inlineScript()->captureEnd();
$this->inlineScript()->appendFile($this->basePath() . '/js/process-monitor/app.js');
?>
