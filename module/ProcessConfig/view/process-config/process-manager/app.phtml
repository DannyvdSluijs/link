<div class="row">
    <div id="app" class="col-md-12">
        <h1><?php echo $this->translate('Process Manager') ?></h1>
        <script type="text/x-handlebars" data-template-name="manager">
            {{outlet}}
        </script>
    </div>
</div>
<?php echo $this->partial('process-config/process-manager/partial/manager-index.phtml') ?>
<?php echo $this->partial('process-config/process-manager/partial/create-process.phtml') ?>
<?php echo $this->partial('process-config/process-manager/partial/edit-process.phtml') ?>
<?php

$this->layout()->sidebar_left = $this->partial('process-config/process-manager/partial/sidebar-left');

$this->inlineScript()->appendFile($this->basePath() . '/js/handlebars.js');
$this->inlineScript()->appendFile($this->basePath() . '/js/ember.js');
$this->inlineScript()->appendFile($this->basePath() . '/js/ember.data.js');
$this->inlineScript()->appendFile($this->basePath() . '/js/i18n.js');
$this->inlineScript()->appendFile($this->basePath() . '/js/i18n-plurals.js');

//Bootstrap ember app
$this->inlineScript()->captureStart();

$apiUrl = ltrim($this->url('process_config/api'), '/');

$possibleDataTypes = json_encode($this->possible_data_types);
$possibleTaskTypes = json_encode($this->possible_task_types);
$connectors = json_encode($this->connectors);
$shortLocale = explode("_", $this->plugin('translate')->getTranslator()->getLocale())[0];
$clientTranslations = json_encode([
    'process' => [
        'linear' => [
            'value' => \Ginger\Processor\Definition::PROCESS_LINEAR_MESSAGING,
            'label' => $this->translate('Linear Process'),
        ],
        'foreach' => [
            'value' => \Ginger\Processor\Definition::PROCESS_PARALLEL_FOR_EACH,
            'label' => $this->translate('Foreach Process'),
        ]
    ],
    'message' => [
        'collect_data' => [
            'value' => 'collect-data',
            'label' => $this->translate('Collect Data Message'),
        ],
        'data_collected' => [
            'value' => 'data-collected',
            'label' => $this->translate('Data Collected Message'),
        ],
    ],
    'task' => [
        'new' => $this->translate('New Task'),
        'collect_data' => $this->translate('Collect {{sourceType}} from {{source}}'),
        'process_data' => $this->translate('Process {{preferredType}} with {{target}}'),
    ]
]);

echo <<<JS
window.ProcessManager = Ember.Application.create({
    rootElement : '#app'
});

DS.RESTAdapter.reopen({
  namespace : '{$apiUrl}'
});

Em.I18n.locale = '{$shortLocale}';

Em.I18n.translations = $clientTranslations;

ProcessManager.TaskTypes   = $possibleTaskTypes;
ProcessManager.DataTypes = $possibleDataTypes;
ProcessManager.Connectors  = $connectors;

//Route Config
ProcessManager.Router.map(function() {
    this.resource('manager', { path: '/' }, function() {
        this.route('create');
        this.resource('process', {path: '/process/:process_id'}, function() {
            this.resource('tasks', function () {
                this.resource('task', {path: '/:task_id'});
                this.route('create');
            });
            this.route('edit');
        });
    });
});

ProcessManager.ApplicationRoute = Ember.Route.extend({
    model : function() {
        {$this->emberPushToStore('process', $this->processes)}
    }
});
JS;
$this->inlineScript()->captureEnd();
$this->inlineScript()->appendFile($this->basePath() . '/js/process-config/app.js');
?>