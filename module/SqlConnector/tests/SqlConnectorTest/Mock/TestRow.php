<?php
/*
 * This file was auto generated by SqlConnector\Service\TableConnectorGenerator.
 * (c) Alexander Miertsch <contact@prooph.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace SqlConnector\DataType\TestDb;

use Ginger\Type\Description\Description;
use Ginger\Type\Description\NativeType;
use SqlConnector\DataType\TableRow;

final class TestData extends TableRow
{
    /**
     * @var array list of doctrine types indexed by property name
     */
    protected static $propertyDbTypes = [
        'name' => 'string',
        'age' => 'integer',
        'created_at' => 'datetime',
        'price' => 'float',
        'active' => 'boolean',

    ];

    /**
     * @var string Doctrine database platform class
     */
    protected static $platformClass = 'Doctrine\DBAL\Platforms\SqlitePlatform';

    /**
     * @return array[propertyName => Prototype]
     */
    public static function getPropertyPrototypes()
    {
        return [
            'name' => \Ginger\Type\String::prototype(),
            'age' => \Ginger\Type\Integer::prototype(),
            'created_at' => \Ginger\Type\DateTime::prototype(),
            'price' => \Ginger\Type\Float::prototype(),
            'active' => \Ginger\Type\Boolean::prototype(),

        ];
    }

    /**
     * @return Description
     */
    public static function buildDescription()
    {
        return new Description("Row", NativeType::DICTIONARY, true, "name");
    }
}